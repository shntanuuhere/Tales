// Mocks generated by Mockito 5.4.6 from annotations
// in tales/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:tales/features/wallpapers/domain/entities/wallpaper.dart' as _i3;
import 'package:tales/features/wallpapers/presentation/providers/wallpaper_provider.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [WallpaperProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockWallpaperProvider extends _i1.Mock implements _i2.WallpaperProvider {
  MockWallpaperProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Wallpaper> get wallpapers => (super.noSuchMethod(
        Invocation.getter(#wallpapers),
        returnValue: <_i3.Wallpaper>[],
      ) as List<_i3.Wallpaper>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isLoadingMore => (super.noSuchMethod(
        Invocation.getter(#isLoadingMore),
        returnValue: false,
      ) as bool);

  @override
  bool get hasMoreWallpapers => (super.noSuchMethod(
        Invocation.getter(#hasMoreWallpapers),
        returnValue: false,
      ) as bool);

  @override
  int get page => (super.noSuchMethod(
        Invocation.getter(#page),
        returnValue: 0,
      ) as int);

  @override
  String get selectedCategory => (super.noSuchMethod(
        Invocation.getter(#selectedCategory),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#selectedCategory),
        ),
      ) as String);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get isOfflineMode => (super.noSuchMethod(
        Invocation.getter(#isOfflineMode),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> fetchWallpapers({bool? refresh = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchWallpapers,
          [],
          {#refresh: refresh},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> changeCategory(String? category) => (super.noSuchMethod(
        Invocation.method(
          #changeCategory,
          [category],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> fetchWallpapersByCategory(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchWallpapersByCategory,
          [category],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> toggleFavorite(_i3.Wallpaper? wallpaper) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleFavorite,
          [wallpaper],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> downloadWallpaper(_i3.Wallpaper? wallpaper) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadWallpaper,
          [wallpaper],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<bool> setWallpaper(
    _i3.Wallpaper? wallpaper,
    int? location,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setWallpaper,
          [
            wallpaper,
            location,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  bool isDownloading(String? wallpaperId) => (super.noSuchMethod(
        Invocation.method(
          #isDownloading,
          [wallpaperId],
        ),
        returnValue: false,
      ) as bool);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
